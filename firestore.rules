rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      // Allow users to read and write their own document
      allow read, write: if isOwner(userId);

      // Allow admins to read all users (you can add admin check here)
      allow read: if isSignedIn();
    }

    // Organizations collection
    match /organizations/{orgId} {
      // Allow organization members to read
      allow read: if isSignedIn();

      // Allow organization admins to write
      allow write: if isSignedIn() &&
        (request.auth.uid == resource.data.adminId ||
         request.auth.uid == request.resource.data.adminId);
    }

    // Game Sessions collection - ALLOW ALL FOR AUTHENTICATED USERS (TEMPORARY FIX)
    match /gameSessions/{sessionId} {
      // Allow any authenticated user to read any game session
      // TODO: Restrict this after fixing userId mapping
      allow read: if isSignedIn();

      // Allow users to create game sessions
      allow create: if isSignedIn();

      // Allow users to update game sessions
      allow update: if isSignedIn();

      // Allow users to delete their own game sessions
      allow delete: if isSignedIn();
    }

    // Admin collection (if you have one)
    match /admin/{document=**} {
      allow read, write: if isSignedIn();
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
